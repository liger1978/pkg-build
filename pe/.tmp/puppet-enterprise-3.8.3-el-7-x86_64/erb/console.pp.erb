<%# Answer Variable => Ruby Variable Translation -%>
<%
  @console_ssl_listen_port = ENV['q_puppet_enterpriseconsole_httpd_port']
  @certname         = ENV['q_puppetagent_certname']
  @dashboard_database_name = ENV['q_puppet_enterpriseconsole_database_name']
  @dashboard_database_user = ENV['q_puppet_enterpriseconsole_database_user']
  if ENV['IS_UPGRADE'] == 'y'
      # Call inspect to quote it, so we don't have to have logic when we use it
      # about whether to quote it (since it may be undef, which shouldn't be
      # quoted)
      @stomp_password = ENV['t_stomp_password'].inspect
  else
      @stomp_password = 'undef'
  end
  #These passwords will be set to nil on upgrades meaning that we won't manage them
  @dashboard_database_password = ENV['q_puppet_enterpriseconsole_database_password']
  @classifier_database_password = ENV['q_classifier_database_password']
  @rbac_database_password = ENV['q_rbac_database_password']
  @activity_database_password = ENV['q_activity_database_password']
  @secret_token = ENV['t_session_key_dashboard']

  @master_certname  = ENV['q_puppetmaster_certname']
  @classifier_database_name     = ENV['q_classifier_database_name']
  @classifier_database_user     = ENV['q_classifier_database_user']
  @rbac_database_name     = ENV['q_rbac_database_name']
  @rbac_database_user     = ENV['q_rbac_database_user']
  @activity_database_name     = ENV['q_activity_database_name']
  @activity_database_user     = ENV['q_activity_database_user']
  @migrate_db       = true
  @disable_live_management  = ENV['q_disable_live_management'] == 'y'
-%>
class { puppet_enterprise::profile::console :
  console_ssl_listen_port => '<%= @console_ssl_listen_port -%>',
  dashboard_database_name      => '<%= @dashboard_database_name -%>',
  dashboard_database_user      => '<%= @dashboard_database_user -%>',
  dashboard_database_password  => '<%= @dashboard_database_password -%>',
  master_certname    => '<%= @master_certname -%>',
  <%# If it's not a PE database (either this is the database node or the PuppetDB node is), disable SSL -%>
  <% if ENV['q_database_install'] != 'y' && ENV['q_puppetdb_hostname'] != ENV['q_database_host'] -%>
    database_properties => '',
  <% end -%>
  secret_token       => '<%= @secret_token -%>',
  migrate_db         => <%= @migrate_db -%>,
  certname           => '<%= @certname -%>',
  classifier_database_name     => '<%= @classifier_database_name -%>',
  classifier_database_user     => '<%= @classifier_database_user -%>',
  classifier_database_password => '<%= @classifier_database_password -%>',
  rbac_database_name     => '<%= @rbac_database_name -%>',
  rbac_database_user     => '<%= @rbac_database_user -%>',
  rbac_database_password => '<%= @rbac_database_password -%>',
  activity_database_name     => '<%= @activity_database_name -%>',
  activity_database_user     => '<%= @activity_database_user -%>',
  activity_database_password => '<%= @activity_database_password -%>',
  disable_live_management => <%= @disable_live_management -%>,
  <% if ENV['t_console_services_java_args'] -%>
  java_args => <%= Hash[*ENV['t_console_services_java_args'].split.to_a] -%>,
  <% end -%>
}

class { puppet_enterprise::profile::mcollective::console:
  stomp_password => <%= @stomp_password -%>,
}

class { puppet_enterprise::profile::agent: }
